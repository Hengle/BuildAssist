// Generated by Assets/Hananoki/BuildAssist/Editor/Localize/ja-JP.csv
namespace Hananoki.BuildAssist {
	public static class L {
		public static string Tr( string s ) {
			return EditorLocalize.Tr( EditorLocalize.GetPakage( Package.name ), s );
		}
		public static string[] Tr( string[] ss ) {
			return EditorLocalize.Tr( EditorLocalize.GetPakage( Package.name ), ss );
		}
	}
	public static class S {
		public static string _ProductName => L.Tr( "Product Name" );
		public static string _Configuration => L.Tr( "Configuration" );
		public static string _Build => L.Tr( "Build" );
		public static string _SwitchPlatform => L.Tr( "Switch Platform" );
		public static string _Architecture => L.Tr( "Architecture" );
		public static string _SelectOutputDirectory => L.Tr( "Select Output Directory" );
		public static string _Compression => L.Tr( "Compression" );
		public static string _CompressionMethod => L.Tr( "Compression Method" );
		public static string __NotFoundDirectory__ => L.Tr( "[Not Found Directory] … " );
		public static string __ActiveBuildTarget_ => L.Tr( " [Active Build Target]" );
		public static string _PlayerSettings_Androidsettingsareincomplete => L.Tr( "PlayerSettings.Android settings are incomplete" );
		public static string _IfBundleVersionCodeis0_abuilderroroccurs => L.Tr( "If BundleVersionCode is 0, a build error occurs" );
		public static string _AnerroroccursifPackageNameis_com_Company_ProductName_ => L.Tr( "An error occurs if PackageName is \"com.Company.ProductName\"" );
		public static string _PackageNameisempty => L.Tr( "PackageName is empty" );
		public static string _PackageNamemustbeseparatedbyatleastone__Dot_ => L.Tr( "PackageName must be separated by at least one .(Dot)" );
		public static string _AnerroroccursifPackageNamestartswitha__Dot_ => L.Tr( "An error occurs if PackageName starts with a .(Dot)" );
		public static string _AnerroroccursiftheendofPackageNameis__Dot_ => L.Tr( "An error occurs if the end of PackageName is .(Dot)" );
		public static string _DevelopmentBuild => L.Tr( "Development Build" );
		public static string _ProfilingisonlyenabledinaDevelopmentPlayer => L.Tr( "Profiling is only enabled in a Development Player" );
		public static string _ConnectProfiler => L.Tr( "Connect Profiler" );
		public static string _AutoRunPlayer => L.Tr( "Auto Run Player" );
		public static string _BuildAndRun => L.Tr( "Build And Run" );
		public static string _BuildAssetBundletogether => L.Tr( "Build AssetBundle together" );
		public static string _BuildAppBundle_GooglePlay_ => L.Tr( "Build App Bundle (Google Play)" );
		public static string _ScriptingBackend => L.Tr( "ScriptingBackend" );
		public static string _C__CompilerConfiguration => L.Tr( "C++ Compiler Configuration" );
		public static string _ScriptingDefineSymbols => L.Tr( "Scripting Define Symbols" );
		public static string _Applybuildonly => L.Tr( "Apply build only" );
		public static string _Current => L.Tr( "Current" );
		public static string _NotethatWebGLdevelopmentbuildsaremuchlargerthanreleasebuildsandshoundnotbepublicsed => L.Tr( "Note that WebGL development builds are much larger than release builds and shound not be publicsed" );
		public static string _NoCompression => L.Tr( "No Compression" );
		public static string _StandardCompression_LZMA_ => L.Tr( "Standard Compression (LZMA)" );
		public static string _ChunkBasedCompression_LZ4_ => L.Tr( "Chunk Based Compression (LZ4)" );
		public static string _ExcludeTypeInformation => L.Tr( "Exclude Type Information" );
		public static string _ForceRebuild => L.Tr( "Force Rebuild" );
		public static string _IgnoreTypeTreeChanges => L.Tr( "Ignore Type Tree Changes" );
		public static string _AppendHash => L.Tr( "Append Hash" );
		public static string _StrictMode => L.Tr( "Strict Mode" );
		public static string _DryRunBuild => L.Tr( "Dry Run Build" );
		public static string _ClearFiles => L.Tr( "Clear Files" );
		public static string _CreateabuildBATfile => L.Tr( "Create a build BAT file" );
		public static string _BuildBATcreated => L.Tr( "Build BAT created" );
		public static string _Autosetting => L.Tr( "Auto setting" );
		public static string _Chooseyourplatformfrompreferences_ => L.Tr( "Choose your platform from preferences." );
		public static string _Currentlynotsupported_ => L.Tr( "Currently not supported." );
		public static string _UseConfigurationName => L.Tr( "Use Configuration Name" );
		public static string _Selectplatformtouse => L.Tr( "Select platform to use" );
		public static string _CompressionFormat => L.Tr( "Compression Format" );
	}
}
